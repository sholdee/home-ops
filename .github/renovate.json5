{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  extends: [
    'config:recommended',
    'docker:enableMajor',
    ':semanticCommitsDisabled',
  ],
  dependencyDashboardTitle: 'Dependency Dashboard :robot:',
  kubernetes: {
    managerFilePatterns: [
      '/apps/.*\\.ya?ml$/',
    ],
  },
  argocd: {
    managerFilePatterns: [
      '/apps/argocd/manifests/apps\\.ya?ml$/',
      '/apps/argocd/manifests/cilium-preflight\\.ya?ml$/',
    ],
  },
  packageRules: [
    {
      description: 'Separate PRs for cilium',
      matchFileNames: [
        '**/apps.yaml',
      ],
      matchManagers: [
        'argocd',
      ],
      matchPackageNames: [
        'cilium',
      ],
      additionalBranchPrefix: 'cilium-',
      commitMessageSuffix: ' [cilium]',
    },
    {
      description: 'Separate PRs for cilium-preflight',
      matchFileNames: [
        '**/cilium-preflight.yaml',
      ],
      matchManagers: [
        'argocd',
      ],
      matchPackageNames: [
        'cilium',
      ],
      additionalBranchPrefix: 'cilium-preflight-',
      commitMessageSuffix: ' [cilium-preflight]',
    },
    {
      matchDatasources: [
        'docker',
      ],
      allowedVersions: '<8',
      matchPackageNames: [
        '/mongodb-community-server/',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      allowedVersions: '<2.28',
      matchPackageNames: [
        '/portainer-ee/',
      ],
    },
    {
      matchDatasources: [
        'docker',
      ],
      schedule: [
        'before 6am',
      ],
      matchPackageNames: [
        '/renovate/',
      ],
    },
    {
      matchUpdateTypes: [
        'minor',
        'patch',
        'digest',
      ],
      matchDatasources: [
        'docker',
        'helm',
      ],
      matchPackageNames: [
        '/renovate/',
        '/cert-manager/',
        '/kube-prometheus-stack/',
        '/kubernetes-dashboard/',
        '/reloader/',
        '/velero/',
        '/postgresql/',
        '/ingress-nginx/',
        '/code-server/',
        '/csi-provisioner/',
        '/csi-snapshotter/',
        '/snapshot-controller/',
        '/hostpathplugin/',
        '/linux-utils/',
        '/github-app-installation-token/',
        '/kromgo/',
        '/kubectl/',
        '/portainer/',
        '/caddy/',
        '/adguard-exporter/',
        '/system-upgrade-controller/',
      ],
      automerge: true,
    },
    {
      matchManagers: ['github-actions'],
      matchDatasources: ['github-tags'],
      matchUpdateTypes: ['minor','patch','digest'],
      automerge: true,
    },
  ],
  customManagers: [
    {
      customType: 'regex',
      managerFilePatterns: [
        '/apps/system-upgrade/manifests/plan\\.ya?ml$/',
      ],
      matchStrings: [
        'version: (?<currentValue>v[\\d\\.\\+\\w-]+)',
      ],
      depNameTemplate: 'k3s',
      versioningTemplate: 'semver-coerced',
      datasourceTemplate: 'custom.k3s',
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '/apps/system-upgrade/manifests/controller\\.ya?ml$/',
      ],
      matchStrings: [
        'SYSTEM_UPGRADE_JOB_KUBECTL_IMAGE: (?<depName>[\\w/-]+):(?<currentValue>v?\\d+\\.\\d+\\.\\d+)',
      ],
      depNameTemplate: '{{depName}}',
      versioningTemplate: 'docker',
      datasourceTemplate: 'docker',
    },
    {
      customType: 'regex',
      description: [
        'Process CloudnativePG Postgresql version',
      ],
      managerFilePatterns: [
        '/apps/hass/hass-db/manifests/cnpg-cluster\\.ya?ml$/',
      ],
      matchStrings: [
        'imageName: (?<depName>\\S+):(?<currentValue>.*\\-.*)',
      ],
      datasourceTemplate: 'docker',
      versioningTemplate: 'redhat',
    },
    {
      customType: 'regex',
      description: [
        'Process MongoDB version',
      ],
      managerFilePatterns: [
        '/^apps/unifi/unifi-db/manifests/replicaset.yaml$/',
      ],
      matchStrings: [
        'version: "(?<currentValue>\\d+\\.\\d+\\.\\d+)"',
      ],
      datasourceTemplate: 'docker',
      packageNameTemplate: 'docker.io/mongodb/mongodb-community-server',
      extractVersionTemplate: '^(?<version>\\d+\\.\\d+\\.\\d+)-(ubi8|ubi9)$',
      versioningTemplate: 'semver',
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '/^apps/cnpg-system/kustomization\\.ya?ml$/',
      ],
      matchStrings: [
        'https://github\\.com/cloudnative-pg/plugin-barman-cloud/releases/download/v(?<currentValue>\\d+\\.\\d+\\.\\d+)/',
      ],
      datasourceTemplate: 'github-releases',
      packageNameTemplate: 'cloudnative-pg/plugin-barman-cloud',
      versioningTemplate: 'semver',
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '/^apps/default/gateway/kustomization\\.ya?ml$/',
      ],
      matchStrings: [
        'https://github\\.com/kubernetes-sigs/gateway-api/releases/download/v(?<currentValue>\\d+\\.\\d+\\.\\d+)/',
      ],
      datasourceTemplate: 'github-releases',
      packageNameTemplate: 'kubernetes-sigs/gateway-api',
      versioningTemplate: 'semver',
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '/^apps/kube-system/external-snapshotter/kustomization\\.ya?ml$/',
      ],
      matchStrings: [
        'https://raw\\.githubusercontent\\.com/kubernetes-csi/external-snapshotter/refs/tags/v(?<currentValue>\\d+\\.\\d+\\.\\d+)/',
      ],
      datasourceTemplate: 'github-releases',
      packageNameTemplate: 'kubernetes-csi/external-snapshotter',
      versioningTemplate: 'semver',
    },
    {
      customType: 'regex',
      managerFilePatterns: [
        '/^apps/external-dns/kustomization\\.ya?ml$/',
      ],
      matchStrings: [
        'https://raw\\.githubusercontent\\.com/kubernetes-sigs/external-dns/refs/tags/v(?<currentValue>\\d+\\.\\d+\\.\\d+)/',
      ],
      datasourceTemplate: 'github-releases',
      packageNameTemplate: 'kubernetes-sigs/external-dns',
      versioningTemplate: 'semver',
    },
  ],
  customDatasources: {
    k3s: {
      defaultRegistryUrlTemplate: 'https://update.k3s.io/v1-release/channels',
      transformTemplates: [
        '{"releases":[{"version": $$.(data[id = \'stable\'].latest),"sourceUrl":"https://github.com/k3s-io/k3s","changelogUrl":$join(["https://github.com/k3s-io/k3s/releases/tag/",data[id = \'stable\'].latest])}],"sourceUrl": "https://github.com/k3s-io/k3s","homepage": "https://k3s.io/"}',
      ],
    },
  },
}
