name: Verify ARM64 image availability

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  check-title:
    runs-on: ubuntu-latest
    outputs:
      matched: ${{ steps.check_title.outputs.matched }}
    steps:
      - name: Check PR Title for Docker Image Update
        id: check_title
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          if echo "$PR_TITLE" | grep -E -q 'Update .* Docker (tag|digest)'; then
            echo "matched=true" >> $GITHUB_ENV
            echo "::set-output name=matched::true"
          else
            echo "matched=false" >> $GITHUB_ENV
            echo "::set-output name=matched::false"
          fi

  check-arm64-image:
    needs: check-title
    if: needs.check-title.outputs.matched == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up jq
        run: sudo apt-get install jq

      - name: Extract Image, Tag, and Digest from PR Diff
        id: extract_image_tag_digest
        run: |
          PR_NUMBER=${{ github.event.number }}
          DIFF_URL="https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/files"
          DIFF_RESPONSE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" $DIFF_URL)
          
          IMAGE_TAG=$(echo $DIFF_RESPONSE | jq -r '.[] | select(.filename | endswith(".yaml", ".yml")) | .patch' | grep -oP 'image: \K.*' | head -n 1)
          IMAGE=$(echo $IMAGE_TAG | cut -d'@' -f1 | cut -d':' -f1-2)
          TAG=$(echo $IMAGE_TAG | cut -d':' -f3 | cut -d'@' -f1)
          DIGEST=$(echo $IMAGE_TAG | grep -oP '@sha256:\K.*' || echo "")

          echo "image=$IMAGE" >> $GITHUB_ENV
          echo "tag=$TAG" >> $GITHUB_ENV
          echo "digest=$DIGEST" >> $GITHUB_ENV

      - name: Check for Arm64 Image
        run: |
          IMAGE=${{ env.image }}
          TAG=${{ env.tag }}
          DIGEST=${{ env.digest }}
          ./check-arm64-availability.sh $IMAGE $TAG $DIGEST
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Add `donotmerge` Label if Arm64 Not Available
        if: failure()
        run: |
          gh pr edit ${{ github.event.number }} --add-label "donotmerge"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove `donotmerge` Label if Arm64 Available
        if: success()
        run: |
          gh pr edit ${{ github.event.number }} --remove-label "donotmerge"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
