apiVersion: apps/v1
kind: Deployment
metadata:
  name: codeserver
  namespace: hass
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: codeserver
  template:
    metadata:
      labels:
        app: codeserver
    spec:
      affinity:
        podAffinity: 
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app 
                operator: In
                values:
                - appdaemon
            topologyKey: kubernetes.io/hostname
      containers:
      - name: codeserver
        image: ghcr.io/linuxserver/code-server:4.23.1@sha256:707a4e7a1a31df4ae3d994d3a5ae9cc2ec6673fd5ebdaf79b2a0c2e8b3045fd4
        env:
          - name: TZ
            value: America/Chicago
          - name: DEFAULT_WORKSPACE
            value: /home
        ports:
        - containerPort: 8443
          name: http
          protocol: TCP
        volumeMounts:
        - name: codeserver-data
          mountPath: /config
        - name: codeserver-repos-data
          mountPath: /home/source-repos
        - name: appdaemon-data
          mountPath: /home/appdaemon-data
        - name: hass-data
          mountPath: /home/hass-data
        - name: portainer-data
          mountPath: /home/portainer-data
        resources:
          requests:
            memory: 170Mi
            cpu: "7m"
          limits:
            memory: 270Mi
      volumes:
      - name: codeserver-data
        persistentVolumeClaim:
          claimName: codeserver-pvc
      - name: codeserver-repos-data
        persistentVolumeClaim:
          claimName: codeserver-repos-pvc
      - name: appdaemon-data
        persistentVolumeClaim:
          claimName: appdaemon-pvc
      - name: hass-data
        persistentVolumeClaim:
          claimName: hass-pvc
      - name: portainer-data
        persistentVolumeClaim:
          claimName: portainer-pvc