apiVersion: batch/v1
kind: Job
metadata:
  name: cilium-preflight-cleanup-job
  namespace: kube-system
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/sync-wave: "1"  # This ensures the job runs after the main resources
spec:
  template:
    spec:
      serviceAccountName: cilium-preflight-cleanup-sa
      restartPolicy: Never
      containers:
      - name: kubectl
        image: bitnami/kubectl:1.30.3
        command:
        - /bin/sh
        - -c
        - |
          # Function to wait for resource readiness
          wait_for_ready() {
            local resource_type=$1
            local resource_name=$2
            local timeout=300  # 5 minutes timeout
            
            echo "Waiting for $resource_type $resource_name to be ready..."
            if ! kubectl rollout status $resource_type/$resource_name -n kube-system --timeout=${timeout}s; then
              echo "$resource_type $resource_name did not become ready within the timeout period."
              return 1
            fi
            echo "$resource_type $resource_name is ready"
          }

          # Wait for deployment
          wait_for_ready deployment cilium-pre-flight-check || exit 1

          # Wait for daemonset
          wait_for_ready daemonset cilium-pre-flight-check || exit 1

          echo "Preflight check resources are ready. Proceeding with cleanup."

          # Perform cleanup
          kubectl delete deployment -n kube-system cilium-pre-flight-check
          kubectl delete daemonset -n kube-system cilium-pre-flight-check

          echo "Cleanup completed."
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cilium-preflight-cleanup-sa
  namespace: kube-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-preflight-cleanup-role
  namespace: kube-system
rules:
- apiGroups: ["apps"]
  resources: ["deployments", "daemonsets"]
  verbs: ["delete", "get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-preflight-cleanup-rolebinding
  namespace: kube-system
subjects:
- kind: ServiceAccount
  name: cilium-preflight-cleanup-sa
  namespace: kube-system
roleRef:
  kind: Role
  name: cilium-preflight-cleanup-role
  apiGroup: rbac.authorization.k8s.io
