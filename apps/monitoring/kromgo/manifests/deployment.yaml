apiVersion: apps/v1
kind: Deployment
metadata:
  name: kromgo
  namespace: monitoring
  labels:
    app: kromgo
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: kromgo
  template:
    metadata:
      labels:
        app: kromgo
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile:
          type: RuntimeDefault
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: kromgo
      containers:
        - name: kromgo
          image: ghcr.io/kashalls/kromgo:v0.6.1@sha256:f6c41bdc1d2d734b69a8612c3f8d105f2246772c5b0a9f01667037dd8c9b6165
          env:
            - name: PROMETHEUS_URL
              value: "http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090"
            - name: SERVER_HOST
              value: "0.0.0.0"
            - name: SERVER_PORT
              value: "80"
            - name: HEALTH_HOST
              value: "0.0.0.0"
            - name: HEALTH_PORT
              value: "88"
          ports:
            - containerPort: 80
              name: http
            - containerPort: 88
              name: health
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: ["ALL"]
          resources:
            requests:
              cpu: 10m
            limits:
              memory: 64Mi
          volumeMounts:
            - name: config-volume
              mountPath: /kromgo/config.yaml
              subPath: config.yaml
              readOnly: true
      volumes:
        - name: config-volume
          configMap:
            name: kromgo-configmap
