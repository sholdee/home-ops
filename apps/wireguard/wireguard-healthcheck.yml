apiVersion: v1
kind: ConfigMap
metadata:
  name: wireguard-entrypoint
  namespace: wireguard
data:
  entrypoint.sh: |
    #!/bin/sh
    
    check_interface() {
        [ -e "/sys/class/net/$1/carrier" ] && [ "$(cat /sys/class/net/$1/carrier)" = "1" ]
    }
    
    healthcheck_handler() {
        read request
        while [ -n "$request" ]; do
            read header
            [ -n "$header" ] || break
        done
    
        if check_interface wg0; then
            printf "HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\nContent-Length: 2\r\nConnection: close\r\n\r\nOK"
        else
            printf "HTTP/1.1 503 Service Unavailable\r\nContent-Type: text/plain\r\nContent-Length: 2\r\nConnection: close\r\n\r\nKO"
        fi
    }
    
    start_healthcheck_server() {
        while true; do
            nc -l -p 8080 -c '
                check_interface() {
                    [ -e "/sys/class/net/$1/carrier" ] && [ "$(cat /sys/class/net/$1/carrier)" = "1" ]
                }
                healthcheck_handler() {
                    read request
                    while [ -n "$request" ]; do
                        read header
                        [ -n "$header" ] || break
                    done
    
                    if check_interface wg0; then
                        printf "HTTP/1.1 200 OK\r\nContent-Type: text/plain\r\nContent-Length: 2\r\nConnection: close\r\n\r\nOK"
                    else
                        printf "HTTP/1.1 503 Service Unavailable\r\nContent-Type: text/plain\r\nContent-Length: 2\r\nConnection: close\r\n\r\nKO"
                    fi
                }
                healthcheck_handler
            '
        done
    }
    
    finish () {
        wg-quick down wg0
        exit 0
    }
    trap finish TERM INT QUIT
    
    wg-quick up /etc/wireguard/wg0.conf
    
    # Start the healthcheck server
    start_healthcheck_server &
    
    # Wait for all background processes
    wait
