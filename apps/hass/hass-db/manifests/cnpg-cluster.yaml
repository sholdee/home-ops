---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: hass-db2
  namespace: hass
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:17.5-17
  primaryUpdateMethod: switchover
  primaryUpdateStrategy: unsupervised
  bootstrap:
    initdb:
      database: hass
      owner: hass
      secret:
        name: hass-db-app-user
      dataChecksums: true
      encoding: 'UTF8'
  superuserSecret:
    name: hass-db-superuser
  storage:
    storageClass: longhorn-noreplicas
    size: 7Gi
  monitoring:
    enablePodMonitor: true
  backup:
    volumeSnapshot:
       className: longhorn
  plugins:
    - name: barman-cloud.cloudnative-pg.io
      isWALArchiver: true
      parameters:
        barmanObjectName: cnpg-hass-b2
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/postgresql.cnpg.io/scheduledbackup_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name:  hass-db2-snapshot-schedule
  namespace: hass
spec:
  cluster:
    name: hass-db2
  schedule: "0 0 0 * * *"
  backupOwnerReference: self
  method: volumeSnapshot
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/postgresql.cnpg.io/scheduledbackup_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: ScheduledBackup
metadata:
  name:  hass-db2-backup-schedule
  namespace: hass
spec:
  cluster:
    name: hass-db2
  schedule: "0 0 7 * * *"
  backupOwnerReference: self
  method: plugin
  pluginConfiguration:
    name: barman-cloud.cloudnative-pg.io
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/refs/heads/main/postgresql.cnpg.io/pooler_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Pooler
metadata:
  name: hass-db-pooler-rw
  namespace: hass
spec:
  cluster:
    name: hass-db2
  instances: 3
  type: rw
  pgbouncer:
    poolMode: transaction
    parameters:
      max_client_conn: "1000"
      default_pool_size: "10"
  monitoring:
    enablePodMonitor: true
  template:
    metadata:
      labels:
        app: pooler
    spec:
      containers: []
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - pooler
            topologyKey: "kubernetes.io/hostname"
